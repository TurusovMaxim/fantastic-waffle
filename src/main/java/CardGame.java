import interfaces.BaseActionsInterface;

import java.util.*;

/**
 * –ö–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –¥–∞–Ω–Ω—É—é –∏–≥—Ä—É –≤ –∫–∞—Ä—Ç—ã —Å –ò–ò.
 */
public class CardGame {
    //—à—Ç—Ä–∞—Ñ–Ω—ã–µ –æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ò–ò
    private int userPenaltyNumber = 0;
    private int aiPenaltyNumber = 0;

    //—Ç–µ–∫—É—â–∏–π —Ä–∞—É–Ω–¥
    private int round = 1;

    //–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤
    int maxNumbOfRound = 12;

    //–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ
    private int numbOfCards;
    //–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –µ–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ


    /**
     * @param numbOfCards - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ.
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞.
     */
    public CardGame(int numbOfCards) {
        this.numbOfCards = numbOfCards;
    }


    /**
     * @param aiCards - –∫–æ–ª–æ–¥–∞ –∫–∞—Ä—Ç –ò–ò.
     * @return - –∏–Ω–¥–µ–∫—Å –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—á–∫–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã.
     *
     * –ú–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ä—Ç—ã –ò–ò. –ü–µ—Ä–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –∏–≥—Ä—ã (6 —Ä–∞—É–Ω–¥–æ–≤)
     * –ò–ò –±—É–¥–µ—Ç —Å—Ç–∞—Ä–∞—Ç—å—Å—è –∑–∞—â–∏—â–∞—Ç—å—Å—è "—Å–∏–ª—å–Ω—ã–º–∏" –∫–∞—Ä—Ç–∞–º–∏, –∞ –Ω–∞ –∞—Ç–∞–∫—É —Å—Ç–∞–≤–∏—Ç—å "—Å–ª–∞–±—ã–µ".
     *
     * –ü—Ä–∏ —ç—Ç–æ–º —Å—Ç–æ–∏—Ç—å —É—á–µ—Å—Ç—å, —á—Ç–æ –ò–ò –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å —Å–∏–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –Ω–∞ –∑–∞–ø–∞—Å. –ó–∞–ø–∞—Å
     * —Å–∏–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π aiStockOfStrongCards.
     *
     * –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –∑–∞–ø–∞—Å–∞ (–ï—Å–ª–∏ –∑–∞–ø–∞—Å != 0) –±—É–¥—É—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è —Å–∏–ª—å–Ω—ã–µ –∞—Ç–∞–∫–∏ –ò–ò
     * –≤–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –∏–≥—Ä—ã, –∞ –∑–∞—â–∏—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–∞—Ä—Ç "—Å—Ä–µ–¥–Ω–µ–π —Å–∏–ª—ã",
     * –≤–µ–¥—å –≤—Å–µ —Å–ª–∞–±—ã–µ –ò–ò "–≤—ã–∫–∏–Ω—É–ª" –∏–∑ –∫–æ–ª–æ–¥—ã –µ—â–µ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã.
     */
    private List<Integer> aiChoice(List<Integer> aiCards) {
        int aiCardIdx;
        int aiCard;

        //–∑–∞–ø–∞—Å —Å–∏–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç –ò–ò
        int aiStockOfStrongCards = 1;

        List<Integer> aiChoice = new ArrayList<>();

        if (round < maxNumbOfRound / 2) {
            if (round %2 != 0) {

                aiCardIdx = numbOfCards - aiStockOfStrongCards - 1;
            } else {
                aiCardIdx = 0;
            }
        } else {
            if (round %2 != 0) {
                aiCardIdx = 0;
            } else {
                aiCardIdx = numbOfCards - 1;
            }
        }

        aiCard = aiCards.get(aiCardIdx);

        aiChoice.add(aiCardIdx);
        aiChoice.add(aiCard);

        return aiChoice;
    }


    /**
     * @param userCards - –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * @param aiCards - –∫–∞—Ä—Ç—ã –ò–ò.
     * @throws InterruptedException - –ò—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ—Ç–æ–∫ –∏–ª–∏ –∫–∞–∫–æ–µ-–ª–∏–±–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è.
     * –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Ç–∞–∫–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º —è–≤–ª—è–µ—Ç—Å—è —Å–æ–Ω –ø–æ—Ç–æ–∫–∞. –ö–æ–º–∞–Ω–¥—ã, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∏–µ –ø–æ—Ç–æ–∫ —Å–ø–∞—Ç—å,
     * –Ω—É–∂–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –ø–æ—Ç–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ—Ä—è–µ—Ç –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ —Ñ–æ–∫—É—Å.
     *
     * –ú–µ—Ç–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –ª–æ–≥–∏–∫—É –∏–≥—Ä—ã.
     */
    public void playersFight(List<Integer> userCards, List<Integer> aiCards) throws InterruptedException {
        BaseActionsInterface baseActions = new BaseActions();

        Scanner sc = new Scanner(System.in);

        //–∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        int userCardIdx;
        //–∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –ò–ò
        int aiCardIdx;

        //–æ—á–∫–∏ –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        int userCard;
        //–æ—á–∫–∏ –∫–∞—Ä—Ç—ã –ò–ò
        int aiCard;

        //—Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞
        int roundResult;

        //–ø–æ–∫–∞ —É –∏–≥—Ä–æ–∫–æ–≤ –µ—Å—Ç—å –∫–∞—Ä—Ç—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä–∞—Ç—å (—ç—Ç–æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥)
        if (!userCards.isEmpty() && !aiCards.isEmpty()){

            /*
            –í –ø–µ—Ä–≤–æ–º —Ä–∞—É–Ω–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—Ç–∞–∫—É–µ—Ç –ò–ò, –≤–æ –≤—Ç–æ—Ä–æ–º –æ–Ω —É–∂–µ –æ–±—Ä–æ–Ω—è—Ç–µ—Å—è –∏ —Ç.–¥,
            –ø–æ–∫–∞ —É –∏–≥—Ä–æ–∫–æ–≤ –µ—Å—Ç—å –∫–∞—Ä—Ç—ã. –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –ø—Ä–∏ –Ω–µ—á–µ—Ç–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ —Ä–∞—É–Ω–¥–∞
            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –∞—Ç–∞–∫–æ–≤–∞—Ç—å(round %2 != 0), –∞ –ø—Ä–∏ —á–µ—Ç–Ω–æ–º –∑–∞—â–∏—â–∞—Ç—å—Å—è (else).
             */
            System.out.println("\n-----------------------------------------------");
            if (round %2 != 0) {
                System.out.println("ROUND " + round + " ATTACK!üí™");
            } else {
                System.out.println("ROUND " + round + " PROTECT!üçÄ");
            }
            System.out.println("-----------------------------------------------");

            //–≤—ã–≤–æ–¥ –∫–∞—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            System.out.println("\nYour cards: ");
            baseActions.showCard(userCards);

            //–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –∫–∞—Ä—Ç—É
            System.out.print("Choose your CARD NUMBER:");
            userCardIdx = sc.nextInt();

            /*
            –ü–æ–ª—É—á–∞–µ–º –æ—á–∫–∏ –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–∫–∑–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É.
            –ò–Ω–¥–µ–∫—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é.
             */
            if (userCardIdx <= numbOfCards && userCardIdx >= 1) {
                userCard = userCards.get(userCardIdx - 1);
            } else {
                System.out.println("Incorrect number!");
                return;
            }

            //–ò–ò –≤—ã–±–∏—Ä–∞–µ—Ç –∫–∞—Ä—Ç—É
            aiCardIdx = aiChoice(aiCards).get(0);
            //–ü–æ–ª—É—á–∞–µ–º –æ—á–∫–∏ –∫–∞—Ä—Ç—ã –ò–ò –ø–æ —É–∫–∑–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
            aiCard = aiChoice(aiCards).get(1);

            //–í—ã–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            Thread.sleep(1000);
            System.out.println("\nYour choices: card number "+ userCardIdx);

            //–í—ã–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –ò–ò
            int showAIChoice = aiCardIdx + 1;
            System.out.println("AI's choices: card number "+ showAIChoice);

            //–ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç—ã
            Thread.sleep(1000);
            System.out.println("\nFlip your cards upside down!");

            //–ò–≥—Ä–æ–∫–∏ —É–∑–Ω–∞—é—Ç –∫–∞—Ä—Ç—ã –¥—Ä—É–≥ –¥—Ä—É–≥–∞
            Thread.sleep(1000);
            System.out.println("\nYour card has the following points: " + userCard);
            System.out.println("AI's card has the following points: " + aiCard);

            /*
            –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—Ç–∞–∫—É–µ—Ç (round %2 != 0), —Ç–æ —à—Ç—Ä–∞—Ñ–Ω—ã–µ –æ—á–∫–∏ –±—É–¥—É—Ç
            –∑–∞–ø–∏—Å–∞–Ω—ã –ò–ò. –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏—Ç—É–∞—Ü–∏–π.
             */
            Thread.sleep(1000);
            if (round %2 != 0) {
                roundResult = userCard - aiCard;

                //–ê—Ç–∞–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞ –ª–∏–±–æ —Ä–∞–≤–Ω–∞ –æ—á–∫–∞–º –∑–∞—â–∏—Ç—ã –ò–ò
                if (roundResult < 0 || roundResult == 0) {
                    //–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–≤—Ä–µ–¥–∏–ª –ò–ò
                    System.out.println("\nYou didn't damage the enemy!");

                } else {
                    //–ê—Ç–∞–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ—á–∫–∏ –æ–±–æ—Ä–æ–Ω—ã –ò–ò, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –≤ —à—Ç—Ä–∞—Ñ–Ω—ã–µ –æ—á–∫–∏ –ò–ò
                    aiPenaltyNumber += roundResult;
                    System.out.println("\nAI received the following number of penalty points: " + roundResult);
                }

                //–í—ã–≤–æ–¥ –æ–±—â–µ–≥–æ —É—Ä–æ–Ω–∞, –Ω–∞–Ω–µ—Å–µ–Ω–Ω–æ–≥–æ –ò–ò
                System.out.println("ENEMY'S TOTAL DAMAGE:" + aiPenaltyNumber);
                //–¢–∞–∫–∏–µ –∂–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è, –µ—Å–ª–∏ –∞—Ç–∞–∫—É–µ—Ç –ò–ò
            } else {
                roundResult = aiCard - userCard;
                //–ê—Ç–∞–∫–∞ –ò–ò —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞ –ª–∏–±–æ —Ä–∞–≤–Ω–∞ –æ—á–∫–∞–º –∑–∞—â–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (roundResult < 0 || roundResult == 0) {
                    //–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ –ò–ò –Ω–µ –Ω–∞–≤—Ä–µ–¥–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    System.out.println("\nYou can relax, you have not been damaged!");
                } else {
                    //–ê—Ç–∞–∫–∞ –ò–ò –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ—á–∫–∏ –æ–±–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –≤ —à—Ç—Ä–∞—Ñ–Ω—ã–µ –æ—á–∫–∏ —é–∑–µ—Ä–∞
                    userPenaltyNumber += roundResult;
                    System.out.println("\nYou received the following number of penalty points: " + roundResult);
                }
                //–í—ã–≤–æ–¥ –æ–±—â–µ–≥–æ —É—Ä–æ–Ω–∞, –Ω–∞–Ω–µ—Å–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                System.out.println("YOUR TOTAL DAMAGE:" + userPenaltyNumber);
            }

            //–£–¥–∞–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –∫–æ–ª–æ–¥—ã
            userCards.remove(userCardIdx - 1);
            aiCards.remove(aiCardIdx);

            //–£–º–µ–Ω—å—à–∞–µ–º –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ –∏—Ö –≤—ã–±–æ—Ä–µ
            numbOfCards--;

            //–ù–∞—Å—Ç—É–ø–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥
            round++;

            baseActions.promptEnterKey();

            //–ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É
            playersFight(userCards, aiCards);
        } else {
            //–£ –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ—Ç –±–æ–ª—å—à–µ –∫–∞—Ä—Ç, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —à—Ç—Ä–∞—Ñ–Ω—ã–µ –æ—á–∫–∏
            if (aiPenaltyNumber > userPenaltyNumber) {
                System.out.println("\nYou WIN!");
            } else if (aiPenaltyNumber == userPenaltyNumber){
                System.out.println("\nFriendship WON!");
            } else {
                System.out.println("\nYou lose!");
            }
            System.out.println("your total damage:" + userPenaltyNumber);
            System.out.println("enemy's total damage:" + aiPenaltyNumber);
        }
    }

}
